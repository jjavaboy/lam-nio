<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <!-- 
    proxy-target-class="false":spring使用JDK动态代理，基于接口实现代理类
    proxy-target-class="true":spring使用cglib实现代理类，可基于类来实现代理类
     -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    
    <bean id="transactionHandler" class="lam.transaction.tcc.TransactionHandlerImpl"/>
    
    <bean id="pointCutInterceptor" class="lam.transaction.tcc.TransactionPointCutInterceptor">
    	<property name="transactionHandler" ref="transactionHandler"/>
    </bean>
    
    <bean id="transactionAspect" class="lam.transaction.tcc.TransactionAspect">
    	<property name="pointCutInterceptor" ref="pointCutInterceptor"/>
    </bean>
    
    <bean id="myService1" class="lam.transaction.tcc.test.MyService1"></bean>
    
    <bean id="myService2" class="lam.transaction.tcc.test.MyService2"></bean>
    
    <bean id="myService" class="lam.transaction.tcc.test.MyService">
    	<property name="myService1" ref="myService1"/>
    	<property name="myService2" ref="myService2"/>
    </bean>

    <!-- 
    <bean id="springBeanFactory" class="org.mengyun.tcctransaction.spring.support.SpringBeanFactory"/>

    <bean id="transactionConfigurator" class="org.mengyun.tcctransaction.spring.support.SpringTransactionConfigurator"
          init-method="init"/>

    <bean id="compensableTransactionAspect" class="org.mengyun.tcctransaction.spring.ConfigurableTransactionAspect"
          init-method="init">
        <property name="transactionConfigurator" ref="transactionConfigurator"/>
    </bean>

    <bean id="resourceCoordinatorAspect" class="org.mengyun.tcctransaction.spring.ConfigurableCoordinatorAspect"
          init-method="init">
        <property name="transactionConfigurator" ref="transactionConfigurator"/>
    </bean>

    <task:annotation-driven/>

    <bean id="transactionRecovery" class="org.mengyun.tcctransaction.recover.TransactionRecovery">
        <property name="transactionConfigurator" ref="transactionConfigurator"/>
    </bean>

    <bean id="recoverScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"/>

    <bean id="recoverScheduledJob" class="org.mengyun.tcctransaction.spring.recover.RecoverScheduledJob"
          init-method="init">
        <property name="transactionRecovery" ref="transactionRecovery"/>
        <property name="transactionConfigurator" ref="transactionConfigurator"/>
        <property name="scheduler" ref="recoverScheduler"/>
    </bean>
     -->

</beans>